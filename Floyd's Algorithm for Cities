times, n, k = [[2, 1, 1], [2, 3, 1], [3, 4, 1]], 4, 2
graph = [[] for _ in range(n + 1)]
for u, v, w in times:
    graph[u].append((v, w))
def dijkstra(start):
    dist = [float('inf')] * (n + 1)
    dist[start] = 0
    queue = [(0, start)]
    while queue:
        d, node = queue.pop(0)
        for neighbor, weight in graph[node]:
            if d + weight < dist[neighbor]:
                dist[neighbor] = d + weight
                queue.append((dist[neighbor], neighbor))
                queue.sort()
    return dist[1:]
result = dijkstra(k)
max_time = max(result)
print(max_time if max_time < float('inf') else -1)
