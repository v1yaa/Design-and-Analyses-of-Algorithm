def graph_coloring(adj_list, n, k):
    color = [-1] * n
    def is_safe(v, c, color):
        for neighbor in adj_list[v]:
            if color[neighbor] == c:
                return False
        return True
    def greedy_coloring():
        color[0] = 0
        for v in range(1, n):
            for c in range(k):
                if is_safe(v, c, color):
                    color[v] = c
                    break
    greedy_coloring()
    return color
edges = [(0, 1), (1, 2), (2, 3), (3, 0), (0, 2)]
n = 4 
k = 3
adj_list = [[] for _ in range(n)]
for edge in edges:
    adj_list[edge[0]].append(edge[1])
    adj_list[edge[1]].append(edge[0])
result = graph_coloring(adj_list, n, k)
print("Coloring:", result)
regions_colored_by_you = result.count(0) 
print("Maximum number of regions you can color:", regions_colored_by_you)
